[{"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\index.tsx":"1","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\App.tsx":"2","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\TransactionList.tsx":"3","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\Balance.tsx":"4","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\IncomeExpense.tsx":"5","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\Header.tsx":"6","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\AddNewTransaction.tsx":"7","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Context\\GlobalContext.tsx":"8","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\Transaction.tsx":"9","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Context\\AppReducer.tsx":"10"},{"size":207,"mtime":1619315940802,"results":"11","hashOfConfig":"12"},{"size":1355,"mtime":1619315940799,"results":"13","hashOfConfig":"12"},{"size":1446,"mtime":1619315940801,"results":"14","hashOfConfig":"12"},{"size":1358,"mtime":1619315940800,"results":"15","hashOfConfig":"12"},{"size":2135,"mtime":1619315940800,"results":"16","hashOfConfig":"12"},{"size":507,"mtime":1619315940800,"results":"17","hashOfConfig":"12"},{"size":2484,"mtime":1619315940799,"results":"18","hashOfConfig":"12"},{"size":1796,"mtime":1619493850982,"results":"19","hashOfConfig":"12"},{"size":2136,"mtime":1619315940801,"results":"20","hashOfConfig":"12"},{"size":848,"mtime":1619315940802,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"10o387y",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\index.tsx",[],[],"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\App.tsx",[],"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\TransactionList.tsx",[],"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\Balance.tsx",[],"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\IncomeExpense.tsx",["46","47","48","49","50","51","52"],"import { Card, Divider, makeStyles } from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalContext\";\r\n\r\ntype IncomeExpenseProps = {\r\n  income: number;\r\n  expense: number;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  flexContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    padding: \"10px\",\r\n    justifyContent: \"center\",\r\n  },\r\n  innerContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  value: {\r\n    fontSize: \"25px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nconst IncomeExpense: React.FC<IncomeExpenseProps> = () => {\r\n  const classes = useStyles();\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction: any) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item: any) => item > 0)\r\n    .reduce((acc: any, item: any) => (acc += item), 0);\r\n\r\n  const expense = amounts\r\n    .filter((item: any) => item < 0)\r\n    .reduce((acc: any, item: any) => (acc += item), 0 * -1);\r\n\r\n  return (\r\n    <Card variant=\"elevation\">\r\n      <div className={classes.flexContainer}>\r\n        <div className={classes.innerContainer}>\r\n          <div>INCOME</div>\r\n          <div className={classes.value}>\r\n            <p style={{ color: \"green\", margin: \"auto\", height: \"auto\" }}>\r\n              {income\r\n                ? String(income).replace(/(\\d{3})(\\d{2})?/, \"$ $1,$200\")\r\n                : \"$ 0,00\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <Divider\r\n          orientation=\"vertical\"\r\n          flexItem\r\n          style={{ margin: \"0px 15px\" }}\r\n        />\r\n\r\n        <div className={classes.innerContainer}>\r\n          <div>EXPENSE</div>\r\n          <div className={classes.value}>\r\n            <p style={{ color: \"red\", margin: \"auto\", height: \"auto\" }}>\r\n              {expense\r\n                ? String(expense).replace(/(\\d{3})(\\d{2})?/, \"$ $1,$200\")\r\n                : \"$ 0,00\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default IncomeExpense;\r\n","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\Header.tsx",[],"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\AddNewTransaction.tsx",[],"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Context\\GlobalContext.tsx",[],"C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Components\\Transaction.tsx",["53","54"],"import { Card, makeStyles } from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalContext\";\r\n\r\ntype HistoryItemProps = {\r\n  id: number;\r\n  text: string;\r\n  amount: number;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 29fr 10fr\",\r\n    gridGap: \"10px\",\r\n    margin: \"10px 0px\",\r\n  },\r\n  amount: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    marginRight: \"10px\",\r\n  },\r\n  text: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    textAlign: \"left\",\r\n    marginLeft: \"10px\",\r\n  },\r\n});\r\n\r\nconst HistoryItem: React.FC<HistoryItemProps> = ({ id, text, amount }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const classes = useStyles();\r\n  const sign = amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <div id=\"mae\" style={{ display: \"flex\" }}>\r\n      <div id=\"deleteButton\">\r\n        <div style={{ cursor: \"pointer\" }}>\r\n          <button id=\"deleteBtnBtn\" onClick={() => deleteTransaction!(id) as any}>X</button>\r\n        </div>\r\n      </div>\r\n\r\n      <Card\r\n        className={classes.container}\r\n        style={{\r\n          borderRight: amount > 0 ? \"5px solid green\" : \"5px solid red\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{ display: \"flex\", alignItems: \"center\", marginLeft: \"10px\" }}\r\n        >\r\n          <div>\r\n            <p style={{ color: \"#7a7a7a\", fontSize: \"0.8rem\" }}>{id}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.text}>\r\n          <p>\r\n            <b>{text}</b>\r\n          </p>\r\n        </div>\r\n\r\n        <div className={classes.amount}>\r\n          <div>\r\n            <span>{sign}</span>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              {String(Math.abs(amount)).replace(\r\n                /(\\d{2,3})(\\d{2})?/,\r\n                \"$ $1,$200\"\r\n              )}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryItem;\r\n","C:\\Users\\Pixel\\Desktop\\traversy-media-expense-tracker-material-ui\\client\\src\\Context\\AppReducer.tsx",["55","56","57","58","59","60","61"],"import { CardActions } from \"@material-ui/core\";\r\n\r\nconst AppReducer = (state: any, action: any) => {\r\n  switch (action.type) {\r\n    case \"GET_TRANSACTIONS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction: any) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      console.log(action.payload, state.transactions);\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      };\r\n    case \"TRANSACTION_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AppReducer;\r\n",{"ruleId":"62","severity":1,"message":"63","line":33,"column":50,"nodeType":"64","messageId":"65","endLine":33,"endColumn":53,"suggestions":"66"},{"ruleId":"62","severity":1,"message":"63","line":36,"column":20,"nodeType":"64","messageId":"65","endLine":36,"endColumn":23,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"63","line":37,"column":19,"nodeType":"64","messageId":"65","endLine":37,"endColumn":22,"suggestions":"68"},{"ruleId":"62","severity":1,"message":"63","line":37,"column":30,"nodeType":"64","messageId":"65","endLine":37,"endColumn":33,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"63","line":40,"column":20,"nodeType":"64","messageId":"65","endLine":40,"endColumn":23,"suggestions":"70"},{"ruleId":"62","severity":1,"message":"63","line":41,"column":19,"nodeType":"64","messageId":"65","endLine":41,"endColumn":22,"suggestions":"71"},{"ruleId":"62","severity":1,"message":"63","line":41,"column":30,"nodeType":"64","messageId":"65","endLine":41,"endColumn":33,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":45,"column":52,"nodeType":"75","messageId":"76","endLine":45,"endColumn":70,"suggestions":"77"},{"ruleId":"62","severity":1,"message":"63","line":45,"column":78,"nodeType":"64","messageId":"65","endLine":45,"endColumn":81,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":3,"column":20,"nodeType":"85","messageId":"86","endLine":3,"endColumn":48},{"ruleId":"83","severity":1,"message":"87","line":3,"column":21,"nodeType":"81","messageId":"88","endLine":3,"endColumn":31},{"ruleId":"62","severity":1,"message":"63","line":3,"column":28,"nodeType":"64","messageId":"65","endLine":3,"endColumn":31,"suggestions":"89"},{"ruleId":"83","severity":1,"message":"90","line":3,"column":33,"nodeType":"81","messageId":"88","endLine":3,"endColumn":44},{"ruleId":"62","severity":1,"message":"63","line":3,"column":41,"nodeType":"64","messageId":"65","endLine":3,"endColumn":44,"suggestions":"91"},{"ruleId":"62","severity":1,"message":"63","line":15,"column":25,"nodeType":"64","messageId":"65","endLine":15,"endColumn":28,"suggestions":"92"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["93","94"],["95","96"],["97","98"],["99","100"],["101","102"],["103","104"],["105","106"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["107"],["108","109"],"@typescript-eslint/no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'state' should be typed with a non-any type.","anyTypedArg",["110","111"],"Argument 'action' should be typed with a non-any type.",["112","113"],["114","115"],{"messageId":"116","fix":"117","desc":"118"},{"messageId":"119","fix":"120","desc":"121"},{"messageId":"116","fix":"122","desc":"118"},{"messageId":"119","fix":"123","desc":"121"},{"messageId":"116","fix":"124","desc":"118"},{"messageId":"119","fix":"125","desc":"121"},{"messageId":"116","fix":"126","desc":"118"},{"messageId":"119","fix":"127","desc":"121"},{"messageId":"116","fix":"128","desc":"118"},{"messageId":"119","fix":"129","desc":"121"},{"messageId":"116","fix":"130","desc":"118"},{"messageId":"119","fix":"131","desc":"121"},{"messageId":"116","fix":"132","desc":"118"},{"messageId":"119","fix":"133","desc":"121"},{"messageId":"134","fix":"135","desc":"136"},{"messageId":"116","fix":"137","desc":"118"},{"messageId":"119","fix":"138","desc":"121"},{"messageId":"116","fix":"139","desc":"118"},{"messageId":"119","fix":"140","desc":"121"},{"messageId":"116","fix":"141","desc":"118"},{"messageId":"119","fix":"142","desc":"121"},{"messageId":"116","fix":"143","desc":"118"},{"messageId":"119","fix":"144","desc":"121"},"suggestUnknown",{"range":"145","text":"146"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"145","text":"147"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"148","text":"146"},{"range":"148","text":"147"},{"range":"149","text":"146"},{"range":"149","text":"147"},{"range":"150","text":"146"},{"range":"150","text":"147"},{"range":"151","text":"146"},{"range":"151","text":"147"},{"range":"152","text":"146"},{"range":"152","text":"147"},{"range":"153","text":"146"},{"range":"153","text":"147"},"suggestOptionalChain",{"range":"154","text":"155"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"156","text":"146"},{"range":"156","text":"147"},{"range":"157","text":"146"},{"range":"157","text":"147"},{"range":"158","text":"146"},{"range":"158","text":"147"},{"range":"159","text":"146"},{"range":"159","text":"147"},[807,810],"unknown","never",[884,887],[921,924],[932,935],[1008,1011],[1045,1048],[1056,1059],[1165,1166],"?.",[1174,1177],[79,82],[92,95],[408,411]]